units:
  # Proxy Keycap Spacing
  kx: cx
  ky: cy
  # Padded Keycap Spacing
  px: cx + 2 # 21 width
  py: cy + 2 # 20 height on flat 2d
  mcu_offset_x: 0.6
  mcu_offset_y: -8
  # X: + 1.68 to get THT to clear DRC
  # Y: -8 + 2.54/2
  # -8 + 2.54/2
  r_mcu_offset_x: 1.68
  r_mcu_offset_y: 1.27
  oled_offset_y: -26.5
points:
  zones:
    main:
      anchor: # to show PCB in KiCad
        shift: [150, -200]
      key:
        padding: ky # vertical
        spread: kx # horizontal
        width: kx # for preview
        height: ky # for preview
      columns:
        outer:
          key.column_net: COuter
          rows:
            mod.skip: true
            bottom.key:
              led_prev: LED_25
              led_next: LED_26
            home.key:
              led_prev: LED_26
              led_next: LED_27
            top.key:
              led_prev: LED_27
              led_next: LED_28
            num.key: # Last key goes nowhere I guess
              led_prev: LED_28
              led_next: LED_29
        pinky:
          key.column_net: CPinky
          rows:
            mod.skip: true
            num.key:
              led_prev: LED_21
              led_next: LED_22
            top.key:
              led_prev: LED_22
              led_next: LED_23
            home.key:
              led_prev: LED_23
              led_next: LED_24
            bottom.key:
              led_prev: LED_24
              led_next: LED_25
        ring:
          key.stagger: 4.9
          key.column_net: CRing
          rows:
            mod.column_net: CPinky
            mod.key:
              led_prev: LED_16
              led_next: LED_17
            bottom.key:
              led_prev: LED_17
              led_next: LED_18
            home.key:
              led_prev: LED_18
              led_next: LED_19
            top.key:
              led_prev: LED_19
              led_next: LED_20
            num.key:
              led_prev: LED_20
              led_next: LED_21
        middle:
          key.stagger: 2.5
          key.column_net: CMid
          rows:
            mod.column_net: CRing
            num.key:
              led_prev: LED_11
              led_next: LED_12
            top.key:
              led_prev: LED_12
              led_next: LED_13
            home.key:
              led_prev: LED_13
              led_next: LED_14
            bottom.key:
              led_prev: LED_14
              led_next: LED_15
            mod.key:
              led_prev: LED_15
              led_next: LED_16
        index:
          key.stagger: -2.5
          key.column_net: CIndex
          rows:
            mod.column_net: CMid
            mod.key:
              led_prev: LED_6
              led_next: LED_7
            bottom.key:
              led_prev: LED_7
              led_next: LED_8
            home.key:
              led_prev: LED_8
              led_next: LED_9
            top.key:
              led_prev: LED_9
              led_next: LED_10
            num.key:
              led_prev: LED_10
              led_next: LED_11
        inner:
          key.stagger: -2.5
          key.column_net: CInner
          rows:
            mod.skip: true
            num.key:
              led_prev: LED_START # This pin connects to the MCU for LED signal
              led_next: LED_1
            top.key:
              led_prev: LED_1
              led_next: LED_2
            home.key:
              led_prev: LED_2
              led_next: LED_3
            bottom.key:
              led_prev: LED_3
              led_next: LED_4
      rows:
        mod:
          row_net: RMod
        bottom:
          row_net: RBottom
        home:
          row_net: RHome
        top:
          row_net: RTop
        num:
          row_net: RNum
    thumbs:
      key:
        padding: ky
        spread: kx
        width: kx
        height: ky
      anchor:
        ref: main_inner_mod
        shift: [2.5, -2.5]
      columns:
        layer:
          key.splay: -15
          key.column_net: CIndex
          rows:
            cluster.key:
              led_prev: LED_5
              led_next: LED_6
        space:
          key.splay: -15
          key.shift: [2.5, 3]
          key.width: 1.5kx
          key.rotate: -90
          key.column_net: CInner
          rows:
            cluster.key:
              led_prev: LED_4
              led_next: LED_5
      rows:
        cluster:
          row_net: RMod
outlines:
  outline: # idk tbh
    - what: rectangle
      where: true
      size: [px, py]
  keys: # key overlaps
    - what: rectangle
      where: true
      size: [kx-0.1, ky-0.1]
  board: # PCB Board outline
    - what: polygon
      operation: stack
      points: # need 1.7 extra on X for PCB Width
        - ref: main_outer_num
          shift: [-0.5px, 0.5py]
        - ref: main_middle_num
          shift: [-0.5px, 0.7py]
        - ref: main_inner_num
          shift: [1.5px + 1.7, 0.625py]
        - ref: main_inner_bottom
          shift: [1.5px + 1.7, -0.25py]
        - ref: thumbs_space_cluster
          shift: [-0.5px, 0.5py]
        - ref: thumbs_space_cluster
          shift: [0.5px, 0.5py]
        - ref: main_index_mod
          shift: [0, -0.5py]
        - ref: main_ring_mod
          shift: [-0.5px, -0.5py]
        - ref: main_outer_bottom
          shift: [-0.5px, -0.5py]
  combo:
    - name: board
    - operation: subtract
      name: keys
pcbs:
  main_pcb:
    outlines:
      main:
        outline:
          board
    footprints:
      choc_hotswap:
        what: choc-wired
        where: true
        adjust:
          rotate: 180
        params:
          keycaps: true
          reverse: true
          hotswap: true
          from: "{{column_net}}"
          to: "{{colrow}}"
      rgb:
        what: sk6812mini-e-wired
        where: true
        adjust:
          shift: [0, 4.5]
        params:
          VDD: RAW
          GND: GND
          DOUT: "{{key.led_next}}"
          DIN: "{{key.led_prev}}"
      diode:
        what: combo-diode
        where: true
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
          include_via: true
          include_via_traces: true
          reversible: true
        adjust:
          shift: [7.4, 3.8]
          rotate: -90
      promicro2:
        what: promicro-ax
        params:
          VDD: 3V3
          P2: RNum
          P3: RTop
          P4: RHome
          P5: RBottom
          P6: RMod
          P7: LED_START
          P8: TRS_DATA
          P11: CInner
          P29: CIndex
          P28: CMid
          P27: CRing
          P26: CPinky
          P22: COuter
          P20: OLED_SDA
          P21: OLED_SCL
        where:
          ref: main_inner_num
          shift: [1kx+mcu_offset_x, mcu_offset_y]
          rotate: -90
      promicro2-back:
        what: promicro-ax
        where:
          ref: main_inner_num
          shift: [1kx+mcu_offset_x+r_mcu_offset_x, mcu_offset_y+r_mcu_offset_y]
          rotate: -90
        params:
          side: 'B'
          VDD: 3V3
          P2: RNum
          P3: RTop
          P4: RHome
          P5: RBottom
          P6: RMod
          P7: LED_START
          P8: TRS_DATA
          P11: CInner
          P29: CIndex
          P28: CMid
          P27: CRing
          P26: CPinky
          P22: COuter
          P20: OLED_SDA
          P21: OLED_SCL
      oled:
        what: oled-pretty
        params:
          side: 'F'
          VCC: 3V3
          SDA: OLED_SDA
          SCL: OLED_SCL
        where:
          ref: main_inner_num
          shift: [1kx+mcu_offset_x, oled_offset_y]
      oled-back:
        what: oled-pretty
        params:
          side: 'B'
          VCC: 3V3
          SDA: OLED_SDA
          SCL: OLED_SCL
        where:
          ref: main_inner_num
          shift: [1kx+mcu_offset_x+r_mcu_offset_y, oled_offset_y + r_mcu_offset_x]
      trrs:
        what: trrs
        params:
          reverse: true
          symmetric: true
          # TODO - Confirm this works with TRS?
          A: TRS_DATA # Note - only supports Serial, not I2C
          B: TRS_DATA
          C: 3V3 # UART1 TX bottom left
          D: GND
        where:
          ref: main_inner_num
          shift: [1kx + 9, -42]
          rotate: -90
